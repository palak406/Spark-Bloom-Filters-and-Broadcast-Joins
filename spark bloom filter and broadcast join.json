{"paragraphs":[{"title":"Question 4 Implement a broadcast join using Bloom filters.  Using broadcast join and a bloom filter, filter all rows in Table A for only those containing ‘model’  in Table B. The common key is the ‘model’ column. ","text":"/*\r\nWe are using bloom filter to improve the efficiency of the joins when we have very large datasets.\r\nAs mentioned in the question, i am creating two tables A and B such that A has data from 2019-01-01.csv through 2019-03-30.csv and B has data 2019-03-31.csv. \r\nThen we will broadcast the table B to all the distributed nodes of spark using bloom filter.\r\n\r\n\r\nReferences\r\nhttps://www.duedil.com/engineering/efficient-broadcast-joins-using-bloom-filters\r\nhttps://spark.apache.org/docs/2.4.0/api/java/index.html?org/apache/spark/util/sketch/BloomFilter.html\r\nhttps://spark.apache.org/docs/2.2.0/rdd-programming-guide.html#broadcast-variables\r\n*/","user":"anonymous","dateUpdated":"2020-04-13T12:46:36-0400","config":{"colWidth":12,"fontSize":9,"enabled":false,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1586795299936_-255094025","id":"20200413-122819_30859289","dateCreated":"2020-04-13T12:28:19-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:236"},{"text":"//Creating the spark session\r\nimport org.apache.spark.sql.SparkSession\r\n\r\nval spark = SparkSession.builder.master(\"local\").appName(\"BigData Q4\").config(\"1.\", \"1\").getOrCreate()","user":"anonymous","dateUpdated":"2020-04-13T12:40:41-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SparkSession\r\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@c52ff6\n"}]},"apps":[],"jobName":"paragraph_1586361438196_-1864089348","id":"20200408-115718_30191237","dateCreated":"2020-04-08T11:57:18-0400","dateStarted":"2020-04-13T10:17:34-0400","dateFinished":"2020-04-13T10:17:36-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:237"},{"text":"//Loading all the csv file and storing it in table A\nval tableA_df = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"C:/Users/palak/Desktop/college/Big Data/Data/data_Q2_SP20/drive_stats_2019_Q1/*.csv\")","user":"anonymous","dateUpdated":"2020-04-13T12:40:58-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tableA_df: org.apache.spark.sql.DataFrame = [date: string, serial_number: string ... 127 more fields]\n"}]},"apps":[],"jobName":"paragraph_1586457354138_1841762238","id":"20200409-143554_28546325","dateCreated":"2020-04-09T14:35:54-0400","dateStarted":"2020-04-13T10:17:48-0400","dateFinished":"2020-04-13T10:17:51-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:238"},{"text":"//Filtering the csv that has date = 2019-03-31\nval TableA = tableA_df.filter(tableA_df(\"date\") =!= \"2019-03-31.csv\")","user":"anonymous","dateUpdated":"2020-04-13T12:41:26-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"TableA: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: string, serial_number: string ... 127 more fields]\n"}]},"apps":[],"jobName":"paragraph_1586457861016_-996318405","id":"20200409-144421_7945330","dateCreated":"2020-04-09T14:44:21-0400","dateStarted":"2020-04-13T10:17:55-0400","dateFinished":"2020-04-13T10:17:56-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:239"},{"text":"//getting the count of table A\nTableA.count()","user":"anonymous","dateUpdated":"2020-04-13T12:41:37-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res2: Long = 9577046\n"}]},"apps":[],"jobName":"paragraph_1586458118931_-1970467719","id":"20200409-144838_31183564","dateCreated":"2020-04-09T14:48:38-0400","dateStarted":"2020-04-13T10:17:59-0400","dateFinished":"2020-04-13T10:18:27-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:240"},{"text":"//Loading the data of 2019-03-31 in table b\nval TableB = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"C:/Users/palak/Desktop/college/Big Data/Data/data_Q2_SP20/drive_stats_2019_Q1/2019-03-31.csv\")","user":"anonymous","dateUpdated":"2020-04-13T12:42:03-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"TableB: org.apache.spark.sql.DataFrame = [date: string, serial_number: string ... 127 more fields]\n"}]},"apps":[],"jobName":"paragraph_1586458544247_-1722540466","id":"20200409-145544_13211217","dateCreated":"2020-04-09T14:55:44-0400","dateStarted":"2020-04-13T10:18:29-0400","dateFinished":"2020-04-13T10:18:30-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:241"},{"text":"//Getting the count of table b\nTableB.count()","user":"anonymous","dateUpdated":"2020-04-13T12:42:17-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res3: Long = 106238\n"}]},"apps":[],"jobName":"paragraph_1586458790316_-1098919249","id":"20200409-145950_17901314","dateCreated":"2020-04-09T14:59:50-0400","dateStarted":"2020-04-13T10:18:34-0400","dateFinished":"2020-04-13T10:18:36-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:242"},{"text":"import spark.implicits._","user":"anonymous","dateUpdated":"2020-04-13T10:18:38-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\n"}]},"apps":[],"jobName":"paragraph_1586459610252_-532311937","id":"20200409-151330_11596168","dateCreated":"2020-04-09T15:13:30-0400","dateStarted":"2020-04-13T10:18:38-0400","dateFinished":"2020-04-13T10:18:39-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:243"},{"text":"import org.apache.spark.sql.DataFrame\r\nimport org.apache.spark.SparkConf \r\nimport org.apache.spark.rdd.RDD \r\nimport org.apache.spark.sql._","user":"anonymous","dateUpdated":"2020-04-13T10:32:28-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.DataFrame\r\nimport org.apache.spark.SparkConf\r\nimport org.apache.spark.rdd.RDD\r\nimport org.apache.spark.sql._\n"}]},"apps":[],"jobName":"paragraph_1586788317718_-439199824","id":"20200413-103157_4114819","dateCreated":"2020-04-13T10:31:57-0400","dateStarted":"2020-04-13T10:32:28-0400","dateFinished":"2020-04-13T10:32:29-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:244"},{"text":"//aaplying bloomfilter to get all rows in Table A for only those containing ‘model’ in Table B. \nval bloomfilter_df = TableB.stat.bloomFilter(\"model\",TableA.count(),0.01)","user":"anonymous","dateUpdated":"2020-04-13T12:43:16-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"bloomfilter_df: org.apache.spark.util.sketch.BloomFilter = org.apache.spark.util.sketch.BloomFilterImpl@39b56de\n"}]},"apps":[],"jobName":"paragraph_1586460549638_-2072170533","id":"20200409-152909_22037819","dateCreated":"2020-04-09T15:29:09-0400","dateStarted":"2020-04-13T10:32:31-0400","dateFinished":"2020-04-13T10:33:03-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:245"},{"text":"//We are using broadcastjoin on already implemented BloomFilter dataframe\nval broadcast = spark.sparkContext.broadcast(bloomfilter_df)","user":"anonymous","dateUpdated":"2020-04-13T12:44:18-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"broadcast: org.apache.spark.broadcast.Broadcast[org.apache.spark.util.sketch.BloomFilter] = Broadcast(45)\n"}]},"apps":[],"jobName":"paragraph_1586459807804_-1612920882","id":"20200409-151647_10879063","dateCreated":"2020-04-09T15:16:47-0400","dateStarted":"2020-04-13T10:35:39-0400","dateFinished":"2020-04-13T10:35:40-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:246"},{"text":"//We create user-defined function to check if the two 'model' columns are different or similar.If they are similar return true else return false\nval value= udf((x:String)=> if(x!=null) broadcast.value.mightContainString(x) else false)","user":"anonymous","dateUpdated":"2020-04-13T12:45:01-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"value: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,BooleanType,Some(List(StringType)))\n"}]},"apps":[],"jobName":"paragraph_1586461143216_1253930998","id":"20200409-153903_19687534","dateCreated":"2020-04-09T15:39:03-0400","dateStarted":"2020-04-13T10:35:42-0400","dateFinished":"2020-04-13T10:35:44-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:247"},{"text":"//The filtered column contains filter all rows in Table A for only those containing ‘model’ in Table B\nval x = TableA.rdd.filter(x => broadcast.value.mightContain(x(2)))","user":"anonymous","dateUpdated":"2020-04-13T12:45:12-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"x: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[130] at filter at <console>:41\n"}]},"apps":[],"jobName":"paragraph_1586461056806_-1667061873","id":"20200409-153736_10442286","dateCreated":"2020-04-09T15:37:36-0400","dateStarted":"2020-04-13T10:35:45-0400","dateFinished":"2020-04-13T10:35:46-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:248"},{"text":"//Getting the count after filter has been applied.\nx.count()","user":"anonymous","dateUpdated":"2020-04-13T12:45:41-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res13: Long = 9576387\n"}]},"apps":[],"jobName":"paragraph_1586461266667_-1214912509","id":"20200409-154106_2972506","dateCreated":"2020-04-09T15:41:06-0400","dateStarted":"2020-04-13T10:35:47-0400","dateFinished":"2020-04-13T10:39:04-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:249"},{"text":"case class newType(c1: String,c2: String, c3:String, c4:String) extends Serializable","user":"anonymous","dateUpdated":"2020-04-13T10:40:51-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class newType\n"}]},"apps":[],"jobName":"paragraph_1586788848896_-788578040","id":"20200413-104048_32995173","dateCreated":"2020-04-13T10:40:48-0400","dateStarted":"2020-04-13T10:40:51-0400","dateFinished":"2020-04-13T10:40:52-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:250"},{"text":"/*Showing the count of the table after the filter of Table A for only those containing ‘model’ in Table B has been applied and showing the result by \r\nconverting it to the dataframe */\r\n/* count of table A is less than its original count*/\r\n\r\nval Data_frame = x.map(y => newType(y(0).toString, y(1).toString, y(2).toString,y(3).toString)).toDF()\r\nprint(\"count is\",x.count())\r\nData_frame.show()\r\n\r\n","user":"anonymous","dateUpdated":"2020-04-13T12:50:28-0400","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(count is,9576387)+----------+--------------+--------------------+--------------+\n|        c1|            c2|                  c3|            c4|\n+----------+--------------+--------------------+--------------+\n|2019-03-05|      Z305B2QN|         ST4000DM000| 4000787030016|\n|2019-03-05|      ZJV0XJQ4|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZJV0XJQ3|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZJV0XJQ0|       ST12000NM0007|12000138625024|\n|2019-03-05|PL1331LAHG1S4H|HGST HMS5C4040ALE640| 4000787030016|\n|2019-03-05|      ZA16NQJR|        ST8000NM0055| 8001563222016|\n|2019-03-05|      ZJV02XWG|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZJV1CSVX|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZJV02XWA|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZA18CEBS|        ST8000NM0055| 8001563222016|\n|2019-03-05|      Z305DEMG|         ST4000DM000| 4000787030016|\n|2019-03-05|      ZA130TTW|         ST8000DM002| 8001563222016|\n|2019-03-05|      ZJV1CSVV|       ST12000NM0007|12000138625024|\n|2019-03-05|      ZA18CEBF|        ST8000NM0055| 8001563222016|\n|2019-03-05|      ZJV02XWV|       ST12000NM0007|12000138625024|\n|2019-03-05|PL2331LAG9TEEJ|HGST HMS5C4040ALE640| 4000787030016|\n|2019-03-05|PL2331LAH3WYAJ|HGST HMS5C4040BLE640| 4000787030016|\n|2019-03-05|PL1331LAHG53YH|HGST HMS5C4040BLE640| 4000787030016|\n|2019-03-05|  88Q0A0LGF97G| TOSHIBA MG07ACA14TA|14000519643136|\n|2019-03-05|PL2331LAHDUVVJ|HGST HMS5C4040BLE640| 4000787030016|\n+----------+--------------+--------------------+--------------+\nonly showing top 20 rows\n\r\nData_frame: org.apache.spark.sql.DataFrame = [c1: string, c2: string ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1586461167012_376900033","id":"20200409-153927_3624036","dateCreated":"2020-04-09T15:39:27-0400","dateStarted":"2020-04-13T10:51:15-0400","dateFinished":"2020-04-13T10:54:38-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:251"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1586461521491_-1188279326","id":"20200409-154521_15394547","dateCreated":"2020-04-09T15:45:21-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:252"}],"name":"Question 4","id":"2F7884TTQ","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}